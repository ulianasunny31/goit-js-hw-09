{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAY,CAChBC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAE3BI,EAAU,CACdC,SAAU,eACVC,aAAc,MACdC,kBAAmB,WACnBC,cAAc,GAGhB,SAASC,EAAcJ,EAAUJ,GAC/B,MAAMS,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAET,E,MAAUJ,IAEpBc,EAAO,C,SAAEV,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CA+BbJ,EAAUC,KAAKmB,iBAAiB,UA3BhC,SAAwBC,GACtBA,EAAIC,iBAEJ,IAAIC,EAAaC,OAAOxB,EAAUI,MAAMqB,OACpCpB,EAAOmB,OAAOxB,EAAUK,KAAKoB,OAC7BnB,EAASkB,OAAOxB,EAAUM,OAAOmB,OAErC,IAAK,IAAIC,EAAI,EAAGA,GAAKpB,EAAQoB,IAAK,CAGhCd,EAAcc,EAFKH,EAAalB,EAAOqB,GAGpCC,MAAK,EAACnB,SAAEA,EAAQJ,MAAEA,MACjBN,EAAA8B,OAAOC,QACL,uBAAqBrB,QAAiBJ,MAAWG,EAC/C,IAGLuB,OAAM,EAACtB,SAAEA,EAAQJ,MAAEA,MAClBN,EAAA8B,OAAOG,QACL,sBAAoBvB,QAAeJ,MAAWG,EAC9C,G,CAIRP,EAAUC,KAAK+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst selectors = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\nconst options = {\n  position: 'right-bottom',\n  borderRadius: '5px',\n  cssAnimationStyle: 'from-top',\n  clickToClose: true,\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(evt) {\n  evt.preventDefault();\n\n  let delayValue = Number(selectors.delay.value);\n  let step = Number(selectors.step.value);\n  let amount = Number(selectors.amount.value);\n\n  for (let i = 1; i <= amount; i++) {\n    let delayPromise = delayValue + step * i;\n\n    createPromise(i, delayPromise)\n      .then(({ position, delay }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          options\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          options\n        );\n      });\n  }\n  selectors.form.reset();\n}\n\nselectors.form.addEventListener('submit', createPromises);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$selectors","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$options","position","borderRadius","cssAnimationStyle","clickToClose","$47d4ff9957288465$var$createPromise","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delayValue","Number","value","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.d96429cc.js.map"}